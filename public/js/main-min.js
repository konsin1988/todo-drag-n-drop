const date=document.getElementById("date"),time=document.getElementById("time"),timer=document.getElementById("timer"),startBtn=document.getElementById("startBtn"),resetBtn=document.getElementById("resetBtn");let time_options={hour:"numeric",minute:"numeric",second:"numeric"};const formatDate=new Intl.DateTimeFormat("ru-Ru"),formatTime=new Intl.DateTimeFormat("ru-Ru",time_options);function createDateTime(e){this.date=formatDate.format(e),this.time=formatTime.format(e),this.setDateTime=function(){date.textContent=this.date,time.textContent=this.time}}function update(){new createDateTime(new Date).setDateTime()}update(),setInterval(()=>{update()},1e3);let intervalId,counter=0,isRunning=!1;function updateTimer(e){timer.textContent=formatTime.format(1e3*e-108e5)}function stopInterval(){clearInterval(intervalId),startBtn.textContent="Start",isRunning=!1,updateTimer(counter)}startBtn.addEventListener("click",()=>{isRunning?stopInterval():(startBtn.textContent="Stop",intervalId=setInterval(()=>{updateTimer(++counter),isRunning=!0},1e3))}),resetBtn.addEventListener("click",()=>{counter=0,stopInterval()});const task=document.getElementById("inputTask"),submit=document.getElementById("submitBtn"),placeholders=document.querySelectorAll(".placeholder");let tasksDoc=document.querySelectorAll(".task");const tasks=[[],[],[]];function clearInnerHTML(){for(let e of placeholders)e.innerHTML=""}function getTemplate(e,t,a){return`<div class="task" draggable="true" data-holder=${t} data-index="${a}">${e}</div>`}function render(e){clearInnerHTML();for(let t=0;t<placeholders.length;++t)for(let a=0;a<e[t].length;++a)placeholders[t].insertAdjacentHTML("afterbegin",getTemplate(e[t][a].title,t,a));tasksDoc=document.querySelectorAll(".task");for(let e of tasksDoc)e.addEventListener("dragstart",dragstart),e.addEventListener("dragend",dragend)}submit.addEventListener("click",()=>{if(0===task.value.length)return;const e={title:task.value};tasks[0].push(e),render(tasks),task.value=""}),render(tasks);let current=0,placeholderDrag=0,insertTask=0;for(const e of placeholders)e.addEventListener("dragover",dragover),e.addEventListener("dragenter",dragenter),e.addEventListener("dragleave",dragleave),e.addEventListener("drop",dragdrop);function dragover(e){e.preventDefault(),e.target.dataset.index&&(insertTask=+e.target.dataset.index,e.target.classList.add("taskOver"))}function dragenter(e){e.target.classList.add("hovered")}function dragleave(e){e.target.classList.remove("hovered"),e.target.classList.remove("taskOver")}function dragdrop(e){const t={title:tasks[placeholderDrag][current].title};tasks[placeholderDrag].splice(current,1),render(tasks);const a=e.target.dataset.indexholder?+e.target.dataset.indexholder:+e.target.dataset.holder;insertTask=a===placeholderDrag?insertTask:insertTask+1,insertTask=e.target.dataset.indexholder?0:insertTask,tasks[a].splice(insertTask,0,t),render(tasks),e.target.classList.remove("hovered")}function dragstart(e){placeholderDrag=+e.target.dataset.holder,current=+e.target.dataset.index,e.target.classList.add("hold"),setTimeout(()=>{e.target.classList.add("hide")},0)}function dragend(e){e.target.className="task"}const clearBtn=document.querySelector(".clearBtn");clearBtn.addEventListener("click",()=>{document.querySelectorAll('.task[data-holder="2"]').forEach(e=>{e.classList.add("removeAnimation")}),setTimeout(()=>{tasks[2].length=0,render(tasks)},900)});